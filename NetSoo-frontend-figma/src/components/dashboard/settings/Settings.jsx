import { useState } from "react";
import { InfoIcon } from "lucide-react";
import { useUser } from "@/context/UserContext";

const Settings = () => {
  const user = useUser();
  const [twoFactorOptions, setTwoFactorOptions] = useState({
    authenticator: false,
    mobileApp: true,
    textMessage: false,
  });

  const [preferences, setPreferences] = useState({
    successfulPayments: false,
    invoicePayments: true,
  });

  const handleToggle = (section, option) => {
    if (section === "twoFactor") {
      setTwoFactorOptions((prev) => ({
        ...prev,
        [option]: !prev[option],
      }));
    } else if (section === "preferences") {
      setPreferences((prev) => ({
        ...prev,
        [option]: !prev[option],
      }));
    }
  };

  return (
    <div>
      <h1 className="text-xl font-semibold mb-6">Settings</h1>

      {/* SIGN-IN METHOD */}
      <div className="mb-8">
        <h2 className="text-sm font-medium text-[#A7A7A7] mb-6">
          SIGN-IN METHOD
        </h2>

        <div className="mb-6">
          <div className="flex justify-between items-center mb-1">
            <h3 className="text-lg font-medium">Email Address</h3>
            <button className="border border-[#FFFFFF30] hover:bg-zinc-700 text-white px-5 py-2.5 rounded-full text-sm transition">
              Change Email
            </button>
          </div>
          <p className="text-zinc-400">example123@gmail.com</p>
        </div>

        <div>
          <div className="flex justify-between items-center mb-1">
            <h3 className="text-lg font-medium">Password</h3>
            <button className="border border-[#FFFFFF30] hover:bg-zinc-700 text-white px-5 py-2.5 rounded-full text-sm transition">
              Reset Password
            </button>
          </div>
          <p className="text-zinc-400">********</p>
        </div>
      </div>

      {/* Divider */}
      <div className="border-t border-[#393939] my-6"></div>

      {/* TWO-STEP VERIFICATION */}
      <div className="mb-8">
        <h2 className="text-sm font-medium text-[#A7A7A7] mb-6">
          TWO-STEP VERIFICATION
        </h2>

        <div className="mb-6">
          <div className="flex justify-between items-center mb-1">
            <div className="flex items-center gap-2">
              <h3 className="text-lg font-medium">Authenticator app</h3>
              <InfoIcon className="w-4 h-4 text-[#3570BC]" />
              <span className="text-[#A7A7A7] text-sm">(Recommended)</span>
            </div>
            <button
              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                twoFactorOptions.authenticator ? "bg-[#3570BC]" : "bg-zinc-700"
              }`}
              onClick={() => handleToggle("twoFactor", "authenticator")}
            >
              <span
                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                  twoFactorOptions.authenticator
                    ? "translate-x-6"
                    : "translate-x-1"
                }`}
              />
            </button>
          </div>
          <p className="text-zinc-400">
            Enter a code generated by your authenticator app to confirm it's
            you.
          </p>
        </div>

        <div className="mb-6">
          <div className="flex justify-between items-center mb-1">
            <div className="flex items-center gap-2">
              <h3 className="text-lg font-medium">Mobile app prompt</h3>
              <InfoIcon className="w-4 h-4 text-[#3570BC]" />
            </div>
            <button
              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                twoFactorOptions.mobileApp ? "bg-[#3570BC]" : "bg-zinc-700"
              }`}
              onClick={() => handleToggle("twoFactor", "mobileApp")}
            >
              <span
                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                  twoFactorOptions.mobileApp ? "translate-x-6" : "translate-x-1"
                }`}
              />
            </button>
          </div>
          <p className="text-zinc-400">
            Receive a prompt from your mobile app to confirm it's you.
          </p>
        </div>

        <div>
          <div className="flex justify-between items-center mb-1">
            <div className="flex items-center gap-2">
              <h3 className="text-lg font-medium">Text message</h3>
              <InfoIcon className="w-4 h-4 text-[#3570BC]" />
            </div>
            <button
              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                twoFactorOptions.textMessage ? "bg-[#3570BC]" : "bg-zinc-700"
              }`}
              onClick={() => handleToggle("twoFactor", "textMessage")}
            >
              <span
                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                  twoFactorOptions.textMessage
                    ? "translate-x-6"
                    : "translate-x-1"
                }`}
              />
            </button>
          </div>
          <p className="text-zinc-400">
            Receive a six digit code by text message to confirm it's you.
          </p>
        </div>
      </div>

      {/* Divider */}
      <div className="border-t border-[#393939] my-6"></div>

      {/* PREFERENCES */}
      <div>
        <h2 className="text-sm font-medium text-[#A7A7A7] mb-6">PREFERENCES</h2>

        <div className="mb-6">
          <div className="flex justify-between items-center mb-1">
            <h3 className="text-lg font-medium">Successful Payments</h3>
            <button
              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                preferences.successfulPayments ? "bg-[#3570BC]" : "bg-zinc-700"
              }`}
              onClick={() => handleToggle("preferences", "successfulPayments")}
            >
              <span
                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                  preferences.successfulPayments
                    ? "translate-x-6"
                    : "translate-x-1"
                }`}
              />
            </button>
          </div>
          <p className="text-zinc-400">
            Receive a notification for every successful payment.
          </p>
        </div>

        <div>
          <div className="flex justify-between items-center mb-1">
            <h3 className="text-lg font-medium">Invoice Payments</h3>
            <button
              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                preferences.invoicePayments ? "bg-[#3570BC]" : "bg-zinc-700"
              }`}
              onClick={() => handleToggle("preferences", "invoicePayments")}
            >
              <span
                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                  preferences.invoicePayments
                    ? "translate-x-6"
                    : "translate-x-1"
                }`}
              />
            </button>
          </div>
          <p className="text-zinc-400">
            Receive a notification if a customer sends an incorrect amount to
            pay their Invoice
          </p>
        </div>
      </div>
    </div>
  );
};

export default Settings;
